name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: apt packages
        run: |
          sudo apt-get update
          sudo apt-get install cppcheck
      - name: Install Arm GNU Toolchain (arm-none-eabi-gcc)
        uses: carlosperate/arm-none-eabi-gcc-action@v1
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cppcheck
        run: cppcheck --enable=warning --platform=arm32-wchar_t4.xml --std=c++20 -I./include/ -i./build/ -DAT32F421=1 --library=gnu.cfg --error-exitcode=1 ${{github.workspace}}
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - {
              name: AT32A403A,
              git: ArteryTek/AT32A403A_Firmware_Library,
              mcu: AT32A403AVCT7,
              ldscript: AT32A403AxC_FLASH.ld,
            }

    steps:
      - name: Install Arm GNU Toolchain (arm-none-eabi-gcc)
        uses: carlosperate/arm-none-eabi-gcc-action@v1
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: ssd1306
      - name: Checkout Artery ${{ matrix.name }} Firmware Library
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.git }}
          path: firmware
      - name: Configure project
        run: |
          mkdir libs
          cp -r firmware/libraries/* ./libs/
          find firmware -wholename */templates/inc/at32*_conf.h -exec cp '{}' . \;
          cp ssd1306/.github/workflows/makefile .
          ls -fl
      - name: Make
        env:
          MCU: ${{ matrix.mcu }}
          LDSCRIPT: ${{ matrix.ldscript }}
        run: |
          make i2c
